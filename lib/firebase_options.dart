// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;
// Import the dotenv package
import 'package:flutter_dotenv/flutter_dotenv.dart';

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  // Read the API key from the loaded .env file
  static final FirebaseOptions web = FirebaseOptions(
    apiKey: dotenv.env['FIREBASE_WEB_API_KEY']!,
    appId: '1:672803047842:web:19216f4b4d86dc966e4afb',
    messagingSenderId: '672803047842',
    projectId: 'catalogapp-7b5bc',
    authDomain: 'catalogapp-7b5bc.firebaseapp.com',
    storageBucket: 'catalogapp-7b5bc.firebasestorage.app',
    measurementId: 'G-8DVTF3NM0L',
  );

  // Read the API key from the loaded .env file
  static final FirebaseOptions android = FirebaseOptions(
    apiKey: dotenv.env['FIREBASE_ANDROID_API_KEY']!,
    appId: '1:672803047842:android:a5497d9e919e90516e4afb',
    messagingSenderId: '672803047842',
    projectId: 'catalogapp-7b5bc',
    storageBucket: 'catalogapp-7b5bc.firebasestorage.app',
  );

  // Read the API key from the loaded .env file
  static final FirebaseOptions ios = FirebaseOptions(
    apiKey: dotenv.env['FIREBASE_IOS_API_KEY']!,
    appId: '1:672803047842:ios:1fe0ca651674ce956e4afb',
    messagingSenderId: '672803047842',
    projectId: 'catalogapp-7b5bc',
    storageBucket: 'catalogapp-7b5bc.firebasestorage.app',
    iosBundleId: 'com.example.catalogApp',
  );

  // Read the API key from the loaded .env file
  static final FirebaseOptions macos = FirebaseOptions(
    apiKey: dotenv.env['FIREBASE_IOS_API_KEY']!, // macOS often uses the same key as iOS
    appId: '1:672803047842:ios:1fe0ca651674ce956e4afb',
    messagingSenderId: '672803047842',
    projectId: 'catalogapp-7b5bc',
    storageBucket: 'catalogapp-7b5bc.firebasestorage.app',
    iosBundleId: 'com.example.catalogApp',
  );

  // Read the API key from the loaded .env file
  static final FirebaseOptions windows = FirebaseOptions(
    apiKey: dotenv.env['FIREBASE_WEB_API_KEY']!, // Windows often uses the same key as Web
    appId: '1:672803047842:web:f9190fa389e602736e4afb',
    messagingSenderId: '672803047842',
    projectId: 'catalogapp-7b5bc',
    authDomain: 'catalogapp-7b5bc.firebaseapp.com',
    storageBucket: 'catalogapp-7b5bc.firebasestorage.app',
    measurementId: 'G-BH062KN8L0',
  );
}
